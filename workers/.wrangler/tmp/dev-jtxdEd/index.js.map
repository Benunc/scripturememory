{
  "version": 3,
  "sources": ["../bundle-AT8gsF/checked-fetch.js", "../bundle-AT8gsF/strip-cf-connecting-ip-header.js", "../../../../node_modules/src/src/Router.ts", "../../../../node_modules/src/src/StatusError.ts", "../../../../node_modules/src/src/createResponse.ts", "../../../../node_modules/src/src/json.ts", "../../../../node_modules/src/src/error.ts", "../../../../node_modules/src/src/status.ts", "../../../../node_modules/src/src/text.ts", "../../../../node_modules/src/src/html.ts", "../../../../node_modules/src/src/jpeg.ts", "../../../../node_modules/src/src/png.ts", "../../../../node_modules/src/src/webp.ts", "../../../../node_modules/src/src/withContent.ts", "../../../../node_modules/src/src/withCookies.ts", "../../../../node_modules/src/src/withParams.ts", "../../../../node_modules/src/src/createCors.ts", "../../../src/auth/token.ts", "../../../src/auth/index.ts", "../../../src/verses/index.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-AT8gsF/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-AT8gsF/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/benmeredith/scripturememory/workers/.wrangler/tmp/dev-jtxdEd",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export const generateToken = async (): Promise<string> => {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return Array.from(array)\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('');\n};\n\nexport const verifyToken = async (token: string): Promise<boolean> => {\n  // In a real implementation, you would verify the token's signature\n  // For now, we'll just check if it's a valid hex string\n  return /^[0-9a-f]{64}$/.test(token);\n}; ", "import { Router } from 'itty-router';\nimport { Env, MagicLink } from '../types';\nimport { generateToken, verifyToken } from './token';\n\n// Rate limiting\nconst RATE_LIMIT = 5; // requests per minute\nconst rateLimits = new Map<string, number[]>();\n\nconst isRateLimited = (email: string): boolean => {\n  const now = Date.now();\n  const userRequests = rateLimits.get(email) || [];\n  const recentRequests = userRequests.filter(time => now - time < 60000);\n  rateLimits.set(email, recentRequests);\n  return recentRequests.length >= RATE_LIMIT;\n};\n\nconst recordRequest = (email: string) => {\n  const now = Date.now();\n  const userRequests = rateLimits.get(email) || [];\n  userRequests.push(now);\n  rateLimits.set(email, userRequests);\n};\n\nexport const handleAuth = {\n  // Send magic link\n  sendMagicLink: async (request: Request, env: Env): Promise<Response> => {\n    try {\n      const { email } = await request.json();\n      \n      if (!email) {\n        return new Response('Email is required', { status: 400 });\n      }\n\n      if (isRateLimited(email)) {\n        return new Response('Too many requests. Please try again later.', { status: 429 });\n      }\n\n      recordRequest(email);\n\n      // Generate magic link token\n      const token = await generateToken();\n      const expiresAt = Date.now() + 15 * 60 * 1000; // 15 minutes\n\n      // Store token in D1\n      await env.DB.prepare(\n        'INSERT INTO magic_links (token, email, expires_at) VALUES (?, ?, ?)'\n      ).bind(token, email, expiresAt).run();\n\n      // In production, you would send an email here\n      // For development, we'll just return the token\n      return new Response(JSON.stringify({ token }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('Error sending magic link:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  },\n\n  // Verify magic link\n  verifyMagicLink: async (request: Request, env: Env): Promise<Response> => {\n    try {\n      console.log('=== Starting token verification ===');\n      const url = new URL(request.url);\n      const token = url.searchParams.get('token');\n      console.log('Received token:', token);\n      console.log('Current timestamp:', Date.now());\n\n      if (!token) {\n        console.log('No token provided');\n        return new Response('Token is required', { status: 400 });\n      }\n\n      // Verify token in D1\n      console.log('Querying database for token...');\n      const result = await env.DB.prepare(\n        'SELECT * FROM magic_links WHERE token = ? AND expires_at > ?'\n      ).bind(token, Date.now()).first();\n      \n      console.log('Database query result:', result);\n\n      if (!result) {\n        console.log('Token not found or expired');\n        return new Response('Invalid or expired token', { status: 401 });\n      }\n\n      console.log('Token found, generating session...');\n      // Delete used token\n      await env.DB.prepare(\n        'DELETE FROM magic_links WHERE token = ?'\n      ).bind(token).run();\n\n      // Generate session token\n      const sessionToken = await generateToken();\n      const expiresAt = Date.now() + 24 * 60 * 60 * 1000; // 24 hours\n\n      // Store session in D1\n      await env.DB.prepare(\n        'INSERT INTO sessions (token, email, expires_at) VALUES (?, ?, ?)'\n      ).bind(sessionToken, result.email, expiresAt).run();\n\n      console.log('Session created successfully');\n      return new Response(JSON.stringify({ \n        token: sessionToken,\n        email: result.email\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('Error in verifyMagicLink:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  }\n}; ", "import { Env, Verse } from '../types';\n\n// Helper to get user email from session token\nconst getUserEmail = async (token: string, env: Env): Promise<string | null> => {\n  const result = await env.DB.prepare(\n    'SELECT email FROM sessions WHERE token = ? AND expires_at > ?'\n  ).bind(token, Date.now()).first<{ email: string }>();\n  return result?.email || null;\n};\n\nexport const handleVerses = {\n  // Get all verses for a user\n  getVerses: async (request: Request, env: Env): Promise<Response> => {\n    try {\n      const authHeader = request.headers.get('Authorization');\n      if (!authHeader?.startsWith('Bearer ')) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n\n      const token = authHeader.split(' ')[1];\n      const email = await getUserEmail(token, env);\n      \n      if (!email) {\n        return new Response('Invalid or expired session', { status: 401 });\n      }\n\n      const verses = await env.DB.prepare(\n        'SELECT * FROM verses WHERE email = ? ORDER BY created_at DESC'\n      ).bind(email).all();\n\n      return new Response(JSON.stringify(verses.results), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('Error getting verses:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  },\n\n  // Add a new verse\n  addVerse: async (request: Request, env: Env): Promise<Response> => {\n    try {\n      const authHeader = request.headers.get('Authorization');\n      if (!authHeader?.startsWith('Bearer ')) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n\n      const token = authHeader.split(' ')[1];\n      const email = await getUserEmail(token, env);\n      \n      if (!email) {\n        return new Response('Invalid or expired session', { status: 401 });\n      }\n\n      const verse: Verse = await request.json();\n      \n      if (!verse.reference || !verse.text) {\n        return new Response('Reference and text are required', { status: 400 });\n      }\n\n      await env.DB.prepare(\n        'INSERT INTO verses (email, reference, text, translation, created_at) VALUES (?, ?, ?, ?, ?)'\n      ).bind(\n        email,\n        verse.reference,\n        verse.text,\n        verse.translation || 'NIV',\n        Date.now()\n      ).run();\n\n      return new Response(JSON.stringify({ success: true }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('Error adding verse:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  },\n\n  // Update a verse\n  updateVerse: async (request: Request, env: Env): Promise<Response> => {\n    try {\n      const authHeader = request.headers.get('Authorization');\n      if (!authHeader?.startsWith('Bearer ')) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n\n      const token = authHeader.split(' ')[1];\n      const email = await getUserEmail(token, env);\n      \n      if (!email) {\n        return new Response('Invalid or expired session', { status: 401 });\n      }\n\n      const url = new URL(request.url);\n      const reference = decodeURIComponent(url.pathname.split('/').pop() || '');\n      \n      if (!reference) {\n        return new Response('Verse reference is required', { status: 400 });\n      }\n\n      const verse: Verse = await request.json();\n      \n      if (!verse.text) {\n        return new Response('Text is required', { status: 400 });\n      }\n\n      // Verify ownership\n      const existing = await env.DB.prepare(\n        'SELECT * FROM verses WHERE reference = ? AND email = ?'\n      ).bind(reference, email).first();\n\n      if (!existing) {\n        return new Response('Verse not found or unauthorized', { status: 404 });\n      }\n\n      await env.DB.prepare(\n        'UPDATE verses SET text = ?, translation = ? WHERE reference = ? AND email = ?'\n      ).bind(\n        verse.text,\n        verse.translation || 'NIV',\n        reference,\n        email\n      ).run();\n\n      return new Response(null, { status: 204 });\n    } catch (error) {\n      console.error('Error updating verse:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  },\n\n  // Delete a verse\n  deleteVerse: async (request: Request, env: Env): Promise<Response> => {\n    try {\n      const authHeader = request.headers.get('Authorization');\n      if (!authHeader?.startsWith('Bearer ')) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n\n      const token = authHeader.split(' ')[1];\n      const email = await getUserEmail(token, env);\n      \n      if (!email) {\n        return new Response('Invalid or expired session', { status: 401 });\n      }\n\n      const url = new URL(request.url);\n      const reference = decodeURIComponent(url.pathname.split('/').pop() || '');\n\n      if (!reference) {\n        return new Response('Verse reference is required', { status: 400 });\n      }\n\n      // Verify ownership\n      const existing = await env.DB.prepare(\n        'SELECT * FROM verses WHERE reference = ? AND email = ?'\n      ).bind(reference, email).first();\n\n      if (!existing) {\n        return new Response('Verse not found or unauthorized', { status: 404 });\n      }\n\n      await env.DB.prepare(\n        'DELETE FROM verses WHERE reference = ? AND email = ?'\n      ).bind(reference, email).run();\n\n      return new Response(null, { status: 204 });\n    } catch (error) {\n      console.error('Error deleting verse:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  }\n}; ", "import { Router } from 'itty-router';\nimport { Env } from './types';\nimport { handleAuth } from './auth/index';\nimport { handleVerses } from './verses/index';\n\n// Create a new router\nconst router = Router();\n\n// Add CORS headers\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n};\n\n// Handle CORS preflight\nrouter.options('*', () => new Response(null, { headers: corsHeaders }));\n\n// Auth routes\nrouter.post('/auth/magic-link', handleAuth.sendMagicLink);\nrouter.get('/auth/verify', handleAuth.verifyMagicLink);\n\n// Verse routes\nrouter.get('/verses', handleVerses.getVerses);\nrouter.post('/verses', handleVerses.addVerse);\nrouter.put('/verses/:reference', handleVerses.updateVerse);\nrouter.delete('/verses/:reference', handleVerses.deleteVerse);\n\n// 404 handler\nrouter.all('*', () => new Response('Not Found', { status: 404 }));\n\n// Export the fetch handler\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    // Handle CORS preflight requests\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        headers: corsHeaders\n      });\n    }\n\n    try {\n      // Handle the request\n      const response = await router.handle(request, env, ctx);\n      \n      // Add CORS headers to the response\n      Object.entries(corsHeaders).forEach(([key, value]) => {\n        response.headers.set(key, value);\n      });\n\n      return response;\n    } catch (error) {\n      console.error('Error handling request:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  }\n}; ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/benmeredith/scripturememory/workers/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/benmeredith/scripturememory/workers/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/benmeredith/scripturememory/workers/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/benmeredith/scripturememory/workers/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/benmeredith/scripturememory/workers/.wrangler/tmp/bundle-AT8gsF/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/benmeredith/scripturememory/workers/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/benmeredith/scripturememory/workers/.wrangler/tmp/bundle-AT8gsF/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/benmeredith/scripturememory/workers/.wrangler/tmp/bundle-AT8gsF/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["Router", "base", "routes", "other", "__proto__", "Proxy", "get", "target", "prop", "receiver", "path", "fetch", "route", "handlers", "push", "toUpperCase", "RegExp", "replace", "async", "request", "args", "response", "match", "url", "URL", "query", "k", "v", "searchParams", "concat", "method", "regex", "pathname", "params", "groups", "handler", "proxy", "createResponse", "format", "transform", "body", "headers", "rest", "constructor", "name", "Response", "entries", "Object", "fromEntries", "json", "JSON", "stringify", "text", "createResponse", "String", "html", "jpeg", "png", "webp", "e", "e"]
}
